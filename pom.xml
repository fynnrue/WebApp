<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>gpse</groupId>
	<artifactId>team21</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Basis</name>
	<description>Basis project gpse 23</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Compiler and Java version -->
		<compiler.version>3.11.0</compiler.version>
		<java.version>17</java.version>

		<!-- Maven Build Helper version -->
		<buildHelper.version>3.3.0</buildHelper.version>

		<!-- Checkstyle versions -->
		<checkstylePlugin.version>3.2.1</checkstylePlugin.version>
		<checkstyle.version>8.38</checkstyle.version>

		<!-- PMD versions -->
		<pmdPlugin.version>3.20.0</pmdPlugin.version>
		<pmd.version>6.55.0</pmd.version>

		<!-- Spotbugs versions -->
		<spotbugsPlugin.version>4.7.3.2</spotbugsPlugin.version>
		<spotbugs.version>4.7.3</spotbugs.version>

		<!-- Jacoco version -->
		<jacoco.version>0.8.8</jacoco.version>

		<!-- Node version -->
		<frontendPlugin.version>1.12.1</frontendPlugin.version>
		<node.version>v18.15.0</node.version>

		<!--suppress UnresolvedMavenProperty -->
		<skipUTs>${skipTests}</skipUTs>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>clean verify</defaultGoal>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!--Compiler-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.version}</version>
				<configuration>
					<release>${java.version}</release>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<parameters>true</parameters>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-processing</arg>
						<arg>-Xlint:-path</arg>
						<arg>-Werror</arg>
					</compilerArgs>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<!--Spring-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--Build-Helper-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${buildHelper.version}</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--Surefire-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--suppress MavenModelInspection -->
					<skipTests>${skipUTs}</skipTests>
				</configuration>
			</plugin>

			<!--Failsafe-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<!-- Generate checkstyle warnings and report in validation phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstylePlugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<configLocation>
						${project.basedir}/codecheck/checkstyle.xml
					</configLocation>
					<propertyExpansion>config_loc=${project.basedir}${file.separator}codecheck
					</propertyExpansion>
					<outputFile>
						${project.build.directory}/checkstyle/checkstyle-result.xml
					</outputFile>
					<includeTestSourceDirectory>false</includeTestSourceDirectory>
					<consoleOutput>true</consoleOutput>
					<violationSeverity>error</violationSeverity>
					<failOnViolation>true</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle-validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate PMD warnings and report in validation phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmdPlugin.version}</version>
				<configuration>
					<targetJdk>${java.version}</targetJdk>
					<rulesets>
						<ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
					</rulesets>
					<verbose>true</verbose>
					<failOnViolation>true</failOnViolation>
					<minimumTokens>100</minimumTokens>
					<linkXRef>false</linkXRef>
					<verbose>true</verbose>
					<failurePriority>1</failurePriority>
				</configuration>
				<executions>
					<execution>
						<id>pmd-check</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-core</artifactId>
						<version>${pmd.version}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-java</artifactId>
						<version>${pmd.version}</version>
					</dependency>
				</dependencies>

			</plugin>

			<!-- Generate Spotbugs warnings and report in validation phase -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugsPlugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>${spotbugs.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>spotbugs-check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludeFilterFile>codecheck/spotbugs-filter.xml</excludeFilterFile>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>

			<!-- Generate jacoco code coverage report in test phase-->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<append>false</append>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<title>${project.name} - Unit-Tests</title>
						</configuration>
					</execution>

					<execution>
						<id>post-unit-test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<title>${project.name} - All Tests</title>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<title>${project.name} - Integration-Tests</title>
						</configuration>
					</execution>


					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<title>${project.name} - All Tests</title>
							<dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontendPlugin.version}</version>
				<executions>
					<!-- Install our node and npm version to run npm/node scripts-->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
						</configuration>
					</execution>
					<!-- Install all project dependencies -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<!-- Build and minify static files -->
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
